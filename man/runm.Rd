% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runm.R
\name{runm}
\alias{runm}
\alias{runm_full}
\alias{runm_int}
\alias{runm_ext}
\title{Generate synthetic data}
\usage{
runm(
  n,
  response = "norm",
  confounder1 = "norm",
  confounder2 = NA,
  type = "int",
  missing_prop = 0.8
)

runm_full(
  n,
  response = "norm",
  confounder1 = "norm",
  confounder2 = NA,
  treatment = TRUE
)

runm_int(
  n,
  response = "norm",
  confounder1 = "norm",
  confounder2 = NA,
  missing_prop
)

runm_ext(n_main, n_external, response, confounder1, confounder2)
}
\arguments{
\item{n}{Number of observations}

\item{response}{\code{"norm"}, \code{"bin"}, \code{"pois"}, or \code{"gam"}}

\item{confounder1}{\code{"norm"} or \code{"bin"}}

\item{confounder2}{\code{"norm"} or \code{"bin"}}

\item{type}{\code{"int"} or \code{"ext"}}

\item{missing_prop}{Proportion of missing values. Only used when \code{type = "int"}}

\item{treatment}{Input documentation here.}

\item{n_main}{Input documentation here.}

\item{n_external}{Input documentation here.}
}
\value{
A \code{tibble}
}
\description{
\code{\link[=runm]{runm()}} generates synthetic data for use in examples of models with
unmeasured confounders (can take up to two unmeasured confounders). Defaults
to one unmeasured confounder.
}
\examples{

# internally validated data
runm(10)
runm(10, missing_prop = .50)

# different response distributions; look at y
runm(10, response = "bin")
runm(10, response = "pois")
runm(10, response = "gam")

# different confounder distributions; look at u1
runm(10, response = "norm", confounder1 = "bin")
runm(10, response =  "bin", confounder1 = "bin")
runm(10, response = "pois", confounder1 = "bin", missing_prop = .7)
runm(10, response = "gam", confounder1 = "bin", missing_prop = .7)

# 2 confounders, u1 and u2
runm(10, response = "norm", confounder1 = "bin", confounder2 = "norm")
runm(10, response =  "bin", confounder1 = "bin", confounder2 = "norm")
runm(10, response = "pois", confounder1 = "bin", confounder2 = "bin", missing_prop = .5)
runm(10, response =  "gam", confounder1 = "bin", confounder2 = "bin", missing_prop = .5)

# externally validated data
runm(10, type = "int")
runm(c(7,3), type = "ext")
runm(c(7,3), response = "norm", confounder1 = "norm", type = "ext")
runm(c(7,3), response = "norm", confounder1 = "bin", confounder2 = "norm", type = "ext")
}
