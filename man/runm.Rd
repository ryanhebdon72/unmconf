% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runm.R
\name{runm}
\alias{runm}
\title{Generate synthetic data}
\usage{
runm(
  n,
  response = "norm",
  confounder1 = "norm",
  confounder2 = NA,
  type = "int",
  missing_prop = 0.8
)
}
\arguments{
\item{n}{Number of observations}

\item{response}{\code{"norm"}, \code{"bin"}, \code{"pois"}, or \code{"gam"}}

\item{confounder1}{\code{"norm"} or \code{"bin"}}

\item{confounder2}{\code{"norm"} or \code{"bin"}}

\item{type}{\code{"int"} or \code{"ext"} (not implemented)}

\item{missing_prop}{Proportion of missing values. Only used when \code{type = "int"}}
}
\value{
A \code{tibble}
}
\description{
\code{\link[=runm]{runm()}} generates synthetic data for use in examples of models with
unmeasured confounders (can take up to two unmeasured confounders). Defaults to
one unmeasured confounder.
}
\details{
\deqn{
  x  \sim \text{Ber}(\text{logit}(\gamma_0 + \gamma_z z + \zeta_{u_1} u_1 + \zeta_{u_2} u_2))\\
  y  \sim N(\beta_0 + \beta_{x} x + \beta_z z + \lambda_{u_1} u_1 + \lambda_{u_2} u_2, \sigma^2_y = 1),}

Where \eqn{(\beta_0 = -1, \beta_x = 0.75, \beta_z = 0.75, \lambda_{u_1} = 0.75, \lambda_{u_2} = 0.75,
   \gamma_0 = -1, \gamma_{z} = .4, \zeta_{u_1} = 0.75, \zeta_{u_2} = 0.75).}
}
\examples{

# internally validated data
runm(20)
runm(20, missing_prop = .50)

runm(20, response = "bin")
runm(20, response = "pois")
runm(20, response = "gam")
runm(20, response = "norm", confounder1 = "bin")
runm(20, response =  "bin", confounder1 = "bin")
runm(20, response = "pois", confounder1 = "bin", missing_prop = .7)
runm(20, response = "gam", confounder1 = "bin", missing_prop = .7)

runm(20, response = "norm", confounder1 = "bin", confounder2 = "norm")
runm(20, response =  "bin", confounder1 = "bin", confounder2 = "norm")
runm(20, response = "pois", confounder1 = "bin", confounder2 = "bin", missing_prop = .7)
runm(20, response = "gam", confounder1 = "bin", confounder2 = "bin", missing_prop = .7)

runm(c(15,5), type = "ext")
runm(c(15,5), response = "norm", confounder1 = "norm", type = "ext")
runm(c(15,5), response = "norm", confounder1 = "bin", confounder2 = "norm", type = "ext")
}
